plugins {
  id "com.github.node-gradle.node"
}

project.ext.react4xp = [
    BUILD_ENV: 'production',
    VERBOSE: 'false'
]


if (
    project.hasProperty('dev')
        || project.hasProperty('development')
) {
  project.ext.react4xp.BUILD_ENV='development';
}

if (gradle.startParameter.logLevel == LogLevel.INFO) {
  project.ext.react4xp.VERBOSE = 'true';
}

task react4xpComponents(type: NpmTask) {
  group 'React4xp'
  description 'Compile the parent projects react components'
  args = [
      'explore', '@enonic/react4xp', '--',
      'npm', 'run', 'webpack:components', '--',
      '--env', 'DIR_PATH_ABSOLUTE_PROJECT=' + project.projectDir,
      '--env', 'BUILD_ENV=' + project.ext.react4xp.BUILD_ENV,
      '--env', 'VERBOSE=' + project.ext.react4xp.VERBOSE
  ]
  inputs.files fileTree(
      dir: './',
      include: [
          'webpack.config.react4xp.js',
          'src/main/resources/**/*.jsx',
          'src/main/resources/**/*.tsx'
      ]
  )
  outputs.dir 'build/resources/main'
}
jar.dependsOn += 'react4xpComponents'


task react4xpExternals(type: NpmTask) {
  group 'React4xp'
  description 'Compile the externals (react and react-dom)'
  args = [
      'explore', '@enonic/react4xp', '--',
      'npm', 'run', 'webpack:externals', '--',
      '--env', 'DIR_PATH_ABSOLUTE_PROJECT=' + project.projectDir,
      '--env', 'BUILD_ENV=' + project.ext.react4xp.BUILD_ENV,
      '--env', 'VERBOSE=' + project.ext.react4xp.VERBOSE
  ]
  inputs.files fileTree(dir: './', include: 'react4xp.config.js')
  outputs.dir 'build/resources/main/assets/react4xp'
}
jar.dependsOn += 'react4xpExternals'


task react4xpNashornPolyfills(type: NpmTask) {
  group 'React4xp'
  description 'Run the imported react4xp webpack scripts that compile the components and externals (as well as nashorn polyfills if needed)'
  args = [
      'explore', '@enonic/react4xp', '--',
      'npm', 'run', 'webpack:nashornPolyfills', '--',
      '--env', 'DIR_PATH_ABSOLUTE_PROJECT=' + project.projectDir,
      '--env', 'BUILD_ENV=' + project.ext.react4xp.BUILD_ENV,
      '--env', 'VERBOSE=' + project.ext.react4xp.VERBOSE
  ]
  inputs.files fileTree(dir: 'src/main/resources', include: 'react4xpNashornPolyfills.es6')
  outputs.dir 'build/resources/main/lib/enonic/react4xp'
}
jar.dependsOn += 'react4xpNashornPolyfills'


StartParameter startParameter = project.gradle.startParameter;
[
    deploy,
    build,
    check,
    test,
    compileTestJava,
    processTestResources,
    assemble,
    jar,
    classes,
    compileJava,
    processResources,
    npmInstall,
    npmSetup,
    nodeSetup,
    clean
].each { task ->

  // This will make sure that various tasks are not run on when starting continuous build.
  // However once a task is triggered by file change, it will still execute it's dependencies ;(
  task.onlyIf { !startParameter.isContinuous() }

  // This should skip a task even if it's "executed"
  task.doFirst {
    if (startParameter.isContinuous()) { throw new StopExecutionException() }
  }

}
